const TOKEN = "1169724107:AAEKCYpfbOXI_64ZBhlR1kCM_oe2AvEpkOs";
const NUMBER = "–í–∞—à –Ω–æ–º–µ—Ä QIWI";
const CHANNEL_USERNAME = "–Æ–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–∞–ª–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏ (–±–µ–∑ @)";
const BOT_USERNAME = "gfgdlfkjgdkl_bot";

const menu = {
	start: [
		["‚ûï –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏", "üñ• –ü—Ä–æ—Ñ–∏–ª—å"],
		["üÖæÔ∏è –û—Ç–∑—ã–≤—ã", "üë• –ü–∞—Ä—Ç–Ω—ë—Ä—ã"]
	],
	wallets: [
		["üëõ 99 —Ä—É–±–ª–µ–π", "üëõ 149 —Ä—É–±–ª–µ–π"],
		["üíº 499 —Ä—É–±–ª–µ–π"],
		["‚úñÔ∏è –ú–µ–Ω—é"]
	]
}

const Telegram = require("node-telegram-bot-api");
const bot = new Telegram(TOKEN, {
	polling: true
});

bot.on("message", async (message) => {
	if(!message.text) return;
	message.send = (text, params) => bot.sendMessage(message.chat.id, text, params);

	if(message.text.startsWith("/start") || message.text === "‚úñÔ∏è –ú–µ–Ω—é") {
		return message.send("üî∫ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ QIWI –∫–æ—à–µ–ª—å–∫–æ–≤!", {
			reply_markup: {
				keyboard: menu.start,
				resize_keyboard: true
			}
		});
	}

	if(message.text === "‚ûï –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏") {
		return message.send(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤—ã–±–∏—Ä–∞–π—Ç–µ –∫–æ—à–µ–ª—å–∫–∏ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å!
		
99 —Ä—É–±–ª–µ–π: –±–∞–ª–∞–Ω—Å –æ—Ç 300 —Ä—É–±–ª–µ–π
149 —Ä—É–±–ª–µ–π: –±–∞–ª–∞–Ω—Å –æ—Ç 700 —Ä—É–±–ª–µ–π
499 —Ä—É–±–ª–µ–π: –±–∞–ª–∞–Ω—Å –æ—Ç 1500 —Ä—É–±–ª–µ–π`, {
			reply_markup: {
				keyboard: menu.wallets,
				resize_keyboard: true
			}
		});
	}

	if(message.text === "üëõ 99 —Ä—É–±–ª–µ–π" || message.text === "üëõ 149 —Ä—É–±–ª–µ–π" || message.text === "üíº 499 —Ä—É–±–ª–µ–π") {
		let amount = message.text === "üëõ 99 —Ä—É–±–ª–µ–π" ? "99" : message.text === "üëõ 149 —Ä—É–±–ª–µ–π" ? "149" : "499";
		return message.send(`–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä.
–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã - —ç—Ç–æ QIWI.

üì≤ QIWI –¥–ª—è –æ–ø–ª–∞—Ç—ã: <code>${NUMBER}</code>
üíµ –°—É–º–º–∞: ${amount}‚ÇΩ
üóí –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã: <code>${message.from.id}</code>`, {
			parse_mode: "HTML",
			reply_markup: {
				inline_keyboard: [
					[
						{ text: "üîÑ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data: "confirm" }
					]
				]
			}
		});
	}

	if(message.text === "üñ• –ü—Ä–æ—Ñ–∏–ª—å") {
		return message.send(`üìù ID: ${message.from.id}
üõí –ü–æ–∫—É–ø–∫–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`, {
			reply_markup: {
				inline_keyboard: [
					[
						{ text: "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", callback_data: "fakerefresh" }
					]
				]
			}
		});
	}

	if(message.text === "üÖæÔ∏è –û—Ç–∑—ã–≤—ã") {
		return message.send(`–ù–µ –≤–µ—Ä–∏—Ç–µ, —á—Ç–æ –º—ã —á–µ—Å—Ç–Ω—ã–π –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–æ—à–µ–ª—å–∫–æ–≤?
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –º—ã —á–µ—Å—Ç–Ω—ã–µ.`, {
			reply_markup: {
				inline_keyboard: [
					[
						{ text: "üÖæÔ∏è –û—Ç–∑—ã–≤—ã", url: `https://t.me/${CHANNEL_USERNAME}` }
					]
				]
			}
		});
	}

	if(message.text === "üë• –ü–∞—Ä—Ç–Ω—ë—Ä—ã") {
		return message.send(`–ù–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å QIWI –∫–æ—à–µ–ª—å–∫–∏?
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –ª—é–¥–µ–π –∏ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –∏—Ö –ø–æ–∫—É–ø–æ–∫.

‚ñ´Ô∏è –û—Ç 1 –ø–æ–∫—É–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: 30%

–ü–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∫–∞–∂–¥—ã–π 5 –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø–æ–∫—É–ø–∞–µ—Ç QIWI –∫–æ—à–µ–ª—å–∫–∏.
–ò–∑ 10 –ø—Ä–∏–≤–ª–µ—á—ë–Ω–Ω—ã—Ö –ª—é–¥–µ–π 2 —Ç–æ—á–Ω–æ –±—É–¥—É—Ç –ø–æ–∫—É–ø–∞—Ç—å –∫–æ—à–µ–ª—å–∫–∏.

–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/${BOT_USERNAME}?start=${message.from.id}`);
	}
});

bot.on("callback_query", async (query) => {
	if(query.data === "confirm") {
		bot.sendMessage(query.message.chat.id, "–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –ø–ª–∞—Ç–µ–∂—É.");
	}

	if(query.data === "fakerefresh") {
		bot.answerCallbackQuery(query.id, "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω.");
	}
});